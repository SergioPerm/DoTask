<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "DetailTaskViewController.updateBottomLayoutConstraintWithNotification(notification:):DetailTaskViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "convertedKeyboardEndFrame.minY">
            </PersistentString>
            <PersistentString
               value = "view.bounds.maxY">
            </PersistentString>
            <PersistentString
               value = "textViewBottomConstraint.constant">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ColorSelectionView.selectedColor.didset:ColorSelectionView.swift">
         <PersistentStrings>
            <PersistentString
               value = "presetColors[1]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DetailTaskViewController.init(taskModel:saveTaskHandler:):DetailTaskViewController.swift">
      </ContextState>
      <ContextState
         contextName = "closure #1 in variable initialization expression of DetailTaskViewController.swipeCloseView:DetailTaskViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "swipeView.clipsToBounds">
            </PersistentString>
            <PersistentString
               value = "chevron.contentMode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TaskListViewModel.tasksDidChange():TaskListViewModel.swift">
      </ContextState>
      <ContextState
         contextName = "TaskListDataSourceCoreDataImpl.controller(_:didChange:at:for:newIndexPath:):TaskListDataSourceCoreDataImpl.swift">
         <PersistentStrings>
            <PersistentString
               value = "indexPath!.row">
            </PersistentString>
            <PersistentString
               value = "indexPath.section">
            </PersistentString>
            <PersistentString
               value = "newIndexPath!.row">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TestScrollViewController.textViewDidChange(_:):TestScrollViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ContainerViewController.viewDidLoad():ContainerViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "navigationController">
            </PersistentString>
            <PersistentString
               value = "navigationController?.title ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TaskListDataSourceCoreDataImpl.addTask(from:):TaskListDataSourceCoreDataImpl.swift">
      </ContextState>
      <ContextState
         contextName = "TaskTitleTextView.updateParentScrollViewOffset():TaskTitleTextView.swift">
      </ContextState>
      <ContextState
         contextName = "DetailTaskNewViewController.setupView():DetailTaskNewViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView.keyboardDismissMode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TaskListDataSourceCoreDataImpl.tasksWithSections.getter:TaskListDataSourceCoreDataImpl.swift">
         <PersistentStrings>
            <PersistentString
               value = "task.title">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShortcutListDataSourceCoreData.shortcutByIdentifier(identifier:):ShortcutListDataSourceCoreData.swift">
      </ContextState>
      <ContextState
         contextName = "TaskListViewController.tableView(_:cellForRowAt:):TaskListViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "viewModel.tableViewItems">
            </PersistentString>
            <PersistentString
               value = "indexPath.row">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TestScrollViewController.viewDidLoad():TestScrollViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "scrollView.bounces">
            </PersistentString>
            <PersistentString
               value = "scrollView.showsVerticalScrollIndicator">
            </PersistentString>
            <PersistentString
               value = "scrollView.isDirectionalLockEnabled">
            </PersistentString>
            <PersistentString
               value = "scrollView.showsHorizontalScrollIndicator">
            </PersistentString>
            <PersistentString
               value = "scrollView.bouncesZoom ">
            </PersistentString>
            <PersistentString
               value = "scrollView.isScrollEnabled ">
            </PersistentString>
            <PersistentString
               value = "scrollView.isPagingEnabled">
            </PersistentString>
            <PersistentString
               value = "scrollView.keyboardDismissMode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DetailShortcutViewModel.init(shortcutUID:dataSource:):DetailShortcutViewModel.swift">
      </ContextState>
      <ContextState
         contextName = "DetailTaskViewController.setupView():DetailTaskViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIScreen.main.bounds">
            </PersistentString>
            <PersistentString
               value = "accesoryBottomConstraint.constant">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CalendarPickerViewController.viewDidAppear(_:):CalendarPickerViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "selectedDate!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TaskListViewController.tableView(_:numberOfRowsInSection:):TaskListViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "dailyModel.tasks.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TaskListViewController.tableViewInsertRow(at:):TaskListViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "viewModel.tableViewItems">
            </PersistentString>
            <PersistentString
               value = "newIndexPath.row">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TaskModel.init(with:):TaskModel.swift">
      </ContextState>
      <ContextState
         contextName = "Shortcut.init(with:):Shortcut.swift">
      </ContextState>
      <ContextState
         contextName = "TaskListViewModel.tasksWillChange():TaskListViewModel.swift">
      </ContextState>
      <ContextState
         contextName = "CalendarCollectionViewCell.updateVisibleStatus():CalendarCollectionViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "currentDayLayer">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TaskListViewController.numberOfSections(in:):TaskListViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "viewModel.tableViewItems">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "DetailTaskViewController.swipeToCloseAction(_:):DetailTaskViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "rView.frame.origin">
            </PersistentString>
            <PersistentString
               value = "viewOrigin">
            </PersistentString>
            <PersistentString
               value = "translation.x">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
